@startuml
abstract class C4DocumentBase {
    + {abstract} GetTemplateFile() : string
    + Name : string <<get>> <<set>>
    + Title : string <<get>> <<set>>
    + ShowLegend : bool <<get>> <<set>>
    + ShowSketch : bool <<get>> <<set>>
    + TopDown : bool <<get>> <<set>>
    + relationships : List<C4Relationship>
    + Relate(from:C4Item, label:string, to:C4Item, technology:string) : void
    + Relate(from:string, label:string, to:string, technology:string) : void
    + RelateDynamically(sequenceNumber:string, from:C4Item, label:string, to:C4Item, technology:string) : void
    + RelateDynamically(sequenceNumber:string, from:string, label:string, to:string, technology:string) : void
    + <<override>> ToString() : string
}
abstract class C4ContainerDocument {
    + <<override>> GetTemplateFile() : string
}
abstract class C4DynamicDocument {
    + <<override>> GetTemplateFile() : string
}
abstract class C4ContextDocument {
    + <<override>> GetTemplateFile() : string
}
abstract class C4ComponentDocument {
    + <<override>> GetTemplateFile() : string
}
abstract class C4DeploymentDocument {
    + <<override>> GetTemplateFile() : string
}
class C4Item {
    + items : List<C4Item>
    + Name : string <<get>> <<set>>
    + Alias : string <<get>> <<set>>
    alias : string
    + Add(item:C4Item) : void
}
class C4ItemExtensions <<static>> {
    + {static} Experiment(parent:C4Item, name:string, alias:string, contains:Action<C4Item>) : C4Item
    + {static} Person(parent:C4Item, name:string, description:string, alias:string, external:bool) : C4Item
    + {static} Container(parent:C4Item, name:string, technology:string, description:string, alias:string, external:bool, database:bool) : C4Item
    + {static} Node(parent:C4Item, name:string, technology:string, alias:string, contains:Action<C4Item>) : C4Item
    + {static} System(parent:C4Item, name:string, description:string, alias:string, external:bool, database:bool) : C4Item
    + {static} Component(parent:C4Item, name:string, description:string, technology:string, alias:string, external:bool, database:bool) : C4Item
    + {static} ContainerBoundary(parent:C4Item, name:string, alias:string, contains:Action<C4Item>) : C4Item
    + {static} SystemBoundary(parent:C4Item, name:string, alias:string, contains:Action<C4Item>) : C4Item
    + {static} Enterprise(parent:C4Item, name:string, alias:string, contains:Action<C4Item>) : C4Item
}
class C4Person {
    + Description : string <<get>> <<set>>
    + External : bool <<get>> <<set>> = false
    + C4Person(name:string, description:string, alias:string, external:bool)
    + <<override>> ToString() : string
}
class C4Component {
    + Technology : string <<get>> <<set>>
    + External : bool <<get>> <<set>> = false
    + Database : bool <<get>> <<set>> = false
    + Description : string <<get>> <<set>>
    + C4Component(name:string, description:string, technology:string, alias:string, external:bool, database:bool)
    + <<override>> ToString() : string
}
class C4System {
    + Description : string <<get>> <<set>>
    + External : bool <<get>> <<set>> = false
    + Database : bool <<get>> <<set>> = false
    + C4System(name:string, description:string, alias:string, external:bool, database:bool)
    + <<override>> ToString() : string
}
class C4SystemBoundary {
    + C4SystemBoundary(name:string, alias:string)
    + <<override>> ToString() : string
}
class C4ContainerBoundary {
    + C4ContainerBoundary(name:string, alias:string)
    + <<override>> ToString() : string
}
class C4Node {
    + Technology : string <<get>> <<set>>
    + C4Node(name:string, technology:string, alias:string)
    + <<override>> ToString() : string
}
class C4Experiment {
    + C4Experiment(name:string, alias:string)
    + <<override>> ToString() : string
}
class C4Enterprise {
    + C4Enterprise(name:string, alias:string)
    + <<override>> ToString() : string
}
class C4Container {
    + Technology : string <<get>> <<set>>
    + Description : string <<get>> <<set>>
    + External : bool <<get>> <<set>> = false
    + Database : bool <<get>> <<set>> = false
    + C4Container(name:string, technology:string, description:string, alias:string, external:bool, database:bool)
    + <<override>> ToString() : string
}
class C4Relationship {
    + From : string <<get>> <<set>>
    + To : string <<get>> <<set>>
    + Label : string <<get>> <<set>>
    + Technology : string <<get>> <<set>>
    + <<override>> ToString() : string
    - FixAlias(input:string) : string
}
class C4DynamicRelationship {
    + SequenceNumber : string <<get>> <<set>>
    + <<override>> ToString() : string
    - FixAlias(input:string) : string
}
C4Item <|-- C4DocumentBase
C4DocumentBase <|-- C4ContainerDocument
C4DocumentBase <|-- C4DynamicDocument
C4DocumentBase <|-- C4ContextDocument
C4DocumentBase <|-- C4ComponentDocument
C4DocumentBase <|-- C4DeploymentDocument
C4Item <|-- C4Person
C4Item <|-- C4Component
C4Item <|-- C4System
C4Item <|-- C4SystemBoundary
C4Item <|-- C4ContainerBoundary
C4Item <|-- C4Node
C4Item <|-- C4Experiment
C4Item <|-- C4Enterprise
C4Item <|-- C4Container
C4Relationship <|-- C4DynamicRelationship
@enduml
